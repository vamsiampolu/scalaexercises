[0m[[0minfo[0m] [0m[32mXmlSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mscala.xml[0m[0m
[0m[[0minfo[0m] [0m[32m- should convert XML literals to scala.xml.Elem[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow for retrieving text from an element[0m[0m
[0m[[0minfo[0m] [0m[32mprojections[0m[0m
[0m[[0minfo[0m] [0m[32m- should use \ to retrieve direct children elements of type[0m[0m
[0m[[0minfo[0m] [0m[32m- should use \\ to retrieve descendents of type[0m[0m
[0m[[0minfo[0m] [0m[32m- should use @<attributename> to retrieve attributeswith \[0m[0m
[0m[[0minfo[0m] [0m[32m- should query for attribute in the same way using \[0m[0m
[0m[[0minfo[0m] [0m[32m- should query all attributes and return a List of values when using \\[0m[0m
[0m[[0minfo[0m] [0m[32mlabel[0m[0m
[0m[[0minfo[0m] [0m[32m- should retrieve label of element[0m[0m
[0m[[0minfo[0m] [0m[32mattribute[0m[0m
[0m[[0minfo[0m] [0m[32m- should use attribute to retrieve a single attribute on a node[0m[0m
[0m[[0minfo[0m] [0m[32mattributes[0m[0m
[0m[[0minfo[0m] [0m[32m- should use attributes to retrieve all attributes on a node[0m[0m
[0m[[0minfo[0m] [0m[32m- should retrieve value of a single attribute using unsafe access[0m[0m
[0m[[0minfo[0m] [0m[32m- should retrieve value using Option[_] using get method[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow for the use of foldLeft[0m[0m
[0m[[0minfo[0m] [0m[32m- should use method asAttrMap to convert attributes to Map[0m[0m
[0m[[0minfo[0m] [0m[32m- should retrieve a single attribute from a scala.xml.MetaData object[0m[0m
[0m[[0minfo[0m] [0m[32mchild[0m[0m
[0m[[0minfo[0m] [0m[32m- should return the immediate child nodes[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow use of map and filter[0m[0m
[0m[[0minfo[0m] [0m[32mfromString[0m[0m
[0m[[0minfo[0m] [0m[32m- should read a String and convert it to an scala.xml.Elem[0m[0m
[0m[[0minfo[0m] [0m[32mpattern matching gotchas[0m[0m
[0m[[0minfo[0m] [0m[32m- should work correctly with an empty self-closing node[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a MatchError when matching non-empty tags as if they were empty self-closing tags[0m[0m
[0m[[0minfo[0m] [0m[32m- should work correctly when exact xml node with text is specified[0m[0m
[0m[[0minfo[0m] [0m[32m- should work with interpolation pattern on text[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a MatchError when more than one element exists as a child of xml[0m[0m
[0m[[0minfo[0m] [0m[32m- should work correctly when using scala with pattern[0m[0m
[0m[[0minfo[0m] [0m[32m- should does not compile when matching on attributes[0m[0m
[0m[[0minfo[0m] [0m[32m- should work correctly when using guards with pattern matching[0m[0m
[0m[[0minfo[0m] [0m[32mmarshalling/unmarshalling XML[0m[0m
[0m[[0minfo[0m] [0m[32m- should convert XML elements to classes[0m[0m
[0m[[0minfo[0m] [0m[32m- should allow creating nested objects in XML[0m[0m
[0m[[0minfo[0m] [0m[33m- should allow converting from Scala to XML (pending)[0m[0m
