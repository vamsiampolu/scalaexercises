<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="localAdmins-MacBook-Pro-4.local" name="example.HelloSpec" tests="63" errors="0" failures="0" skipped="0" time="0.05">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib"/><property name="java.vm.version" value="25.152-b16"/><property name="gopherProxySet" value="false"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="AU"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/Users/localuser/Do/scalaexercises"/><property name="java.runtime.version" value="1.8.0_152-b16"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/endorsed"/><property name="os.arch" value="x86_64"/><property name="java.io.tmpdir" value="/var/folders/ty/xytl_jgn54zf1y8wf5bx5fq80000gp/T/"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Mac OS X"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/Users/localuser/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.13.1"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="user.home" value="/Users/localuser"/><property name="user.timezone" value="Australia/Sydney"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/local/Cellar/sbt/1.0.4/libexec/bin/sbt-launch.jar"/><property name="user.name" value="localuser"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/1.0.4/libexec/bin/sbt-launch.jar ~test"/><property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_152"/><property name="java.ext.dirs" value="/Users/localuser/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/><property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="sun.cpu.endian" value="little"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="example.HelloSpec" name="The Hello object should say hello" time="0.017">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="The primitive true should be true" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="The number 4 should equal 4" time="0.003">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="The number 2 should equal 1 + 1" time="0.003">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="class should provide access to property once instantiated" time="0.002">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="create should return Point" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="create should be an instance of Point" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="create should have Some('value')" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="create should be None if no value is supplied" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="getOrElse should retrieve value if it exists" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="getOrElse should retrieve default value if None" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="isEmpty method on Some('Value') should be false" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="isEmpty method on None should be true" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Option[String] should pattern matching be FoundValue" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Option[String] should pattern matching be None" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Option[String] should work with map" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Option[String] should be unboxed out of Some(Int) using fold" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Option[String] should return default value on fold if None" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="object should create singleton" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Companion Object should contain factory methods" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Companion Object should be able to access private members" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Tuple members should be accesed using _1 and so on" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Tuple members should be accessed using destructuring" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Tuple of size 2 should allow members to be swapped" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Lambda should work" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Lambda should use closures" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Lambda should accept functions" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Lambda should return functions" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Lambda should return functions2" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Lambda should work with isInstanceOf" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Lambda should work with shouldBe a" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Lambda should be passed to map" time="0.002">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should be comparable using ==" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should not be comparable using equal" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should use head, headOption and tail" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should allow access to elements using indices" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should have utility methods" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should allow filter method" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should have foldLeft and reduceLeft for aggregation" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should be created from a Range by invoking toList" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should allow prepending with the :: operator" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should allow prepending to Nil" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should allow concat with ::: operator" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should allow Nil to be concated to List" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="List should reuse their tails" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should work with shorthand notation" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should provide value when apply method is invoked with a key" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should values can be accessed directly" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should safely retrieve value with get method" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should safely retrieve with getOrElse" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should be allowed to have one fallback for any missing keys" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should provide its size property" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should update a property with duplicate key" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should report if it contains a key" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should allow keys to be added with + operation" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should allow keys to be removed with - operation" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should allow removing multiple keys with - and tuple" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should allow multiple keys to be removed with -- operation" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should infer key types to Any if not specified" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should allow for concatenation with ++ operator" time="0.001">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should retrieve values as a List when values is invoked" time="0.005">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should retrieve keys as a List when keys is invoked" time="0.0">
                                                 
                                               </testcase><testcase classname="example.HelloSpec" name="Map should retrieve keys as a KeySet" time="0.001">
                                                 
                                               </testcase>
                     <system-out></system-out>
                     <system-err></system-err>
                   </testsuite>